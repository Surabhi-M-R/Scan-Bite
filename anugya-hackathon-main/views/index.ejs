<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ANUGYA - Upload Image</title>
    <link rel="stylesheet" href="/styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body>
    <div class="container">
        <h1>ANUGYA</h1>
        <div class="scanner-box">
            <form action="/detail" method="POST" enctype="multipart/form-data" class="scanner" id="uploadForm">
                <div class="file-upload-container">
                    <label class="file-upload-label">
                        <i class="fas fa-cloud-upload-alt file-upload-icon"></i>
                        <span class="file-upload-text">Choose a file or drag it here</span>
                        <span class="file-upload-subtext">Supported formats: JPG, PNG, WEBP</span>
                        <input type="file" name="image" accept="image/*" required id="fileInput">
                    </label>
                </div>

                <div class="camera-container">
                    <button type="button" class="camera-btn" id="startCamera">
                        <i class="fas fa-camera camera-icon"></i>
                        <span>Take Photo</span>
                    </button>
                </div>

                <div class="camera-preview" id="cameraPreview">
                    <video id="video" autoplay playsinline></video>
                    <img id="capturedImage" style="display: none;">
                    <div class="camera-controls">
                        <button type="button" class="capture-btn" id="captureBtn">
                            <i class="fas fa-camera"></i> Capture
                        </button>
                        <button type="button" class="cancel-btn" id="cancelBtn">
                            <i class="fas fa-times"></i> Cancel
                        </button>
                    </div>
                </div>

                <button type="submit" id="submitBtn">Scan Product</button>
            </form>
        </div>
    </div>

    <script>
        const startCameraBtn = document.getElementById('startCamera');
        const cameraPreview = document.getElementById('cameraPreview');
        const video = document.getElementById('video');
        const capturedImage = document.getElementById('capturedImage');
        const captureBtn = document.getElementById('captureBtn');
        const cancelBtn = document.getElementById('cancelBtn');
        const submitBtn = document.getElementById('submitBtn');
        const fileInput = document.getElementById('fileInput');
        const uploadForm = document.getElementById('uploadForm');
        let stream = null;

        // Handle file input change
        fileInput.addEventListener('change', (e) => {
            const file = e.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = (e) => {
                    capturedImage.src = e.target.result;
                    cameraPreview.classList.add('active');
                    video.style.display = 'none';
                    capturedImage.style.display = 'block';
                    captureBtn.style.display = 'none';
                };
                reader.readAsDataURL(file);
            }
        });

        // Start camera
        startCameraBtn.addEventListener('click', async () => {
            try {
                stream = await navigator.mediaDevices.getUserMedia({ 
                    video: { 
                        facingMode: 'environment',
                        width: { ideal: 1280 },
                        height: { ideal: 720 }
                    } 
                });
                video.srcObject = stream;
                cameraPreview.classList.add('active');
                startCameraBtn.style.display = 'none';
                capturedImage.style.display = 'none';
                video.style.display = 'block';
                captureBtn.style.display = 'block';
            } catch (err) {
                console.error('Error accessing camera:', err);
                alert('Could not access camera. Please make sure you have granted camera permissions.');
            }
        });

        // Capture photo
        captureBtn.addEventListener('click', () => {
            const canvas = document.createElement('canvas');
            canvas.width = video.videoWidth;
            canvas.height = video.videoHeight;
            canvas.getContext('2d').drawImage(video, 0, 0);
            
            // Convert canvas to blob
            canvas.toBlob((blob) => {
                const file = new File([blob], 'camera_capture.jpg', { type: 'image/jpeg' });
                const dataTransfer = new DataTransfer();
                dataTransfer.items.add(file);
                fileInput.files = dataTransfer.files;
                
                // Display captured image
                capturedImage.src = canvas.toDataURL('image/jpeg');
                video.style.display = 'none';
                capturedImage.style.display = 'block';
                captureBtn.style.display = 'none';
            }, 'image/jpeg');
        });

        // Cancel camera
        cancelBtn.addEventListener('click', () => {
            if (stream) {
                stream.getTracks().forEach(track => track.stop());
            }
            cameraPreview.classList.remove('active');
            startCameraBtn.style.display = 'flex';
            video.style.display = 'block';
            capturedImage.style.display = 'none';
            captureBtn.style.display = 'block';
            fileInput.value = '';
        });

        // Handle form submission
        uploadForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            if (!fileInput.files[0]) {
                alert('Please select an image or take a photo first.');
                return;
            }

            // Show loading state
            submitBtn.disabled = true;
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Scanning...';

            // Submit the form
            this.submit();
        });

        // Clean up camera when leaving page
        window.addEventListener('beforeunload', () => {
            if (stream) {
                stream.getTracks().forEach(track => track.stop());
            }
        });
    </script>
</body>
</html>