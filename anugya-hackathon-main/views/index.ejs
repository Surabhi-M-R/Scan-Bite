<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Page 2</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap');
    </style>
</head>
<body class="bg-black text-white font-[Inter] overflow-x-hidden flex items-center justify-center min-h-screen relative flex-col">
    <img src="/assets/IMAGE.png" alt="Top Left" class="absolute top-0 left-0 w-52 h-82 m-2"/>
    <img src="/assets/IMAGE (1).png" alt="Top Right" class="absolute top-0 right-0 w-52 h-82 m-2"/>
    <img src="/assets/Untitled design (1) 2 (1).png" alt="Bottom Left" class="absolute bottom-0 left-0 w-52 h-82 m-2"/>
    <img src="/assets/Untitled design (1) 1.png" alt="Bottom Right" class="absolute bottom-0 right-0 w-52 h-82 m-2"/>
    
    <div class="flex">
        <img src="/assets/Untitled design (3) (1).png" class="w-[600px] h-[600px] z-50 mt-[80px] top-0 left-0 w-52 h-82 m-2 hidden md:block"/>
    <div class="flex flex-col items-center">
        <div class="flex gap-[0px] ml-[190px]">
        <img src="/assets/Screenshot (93).png" alt="title" class="w-[260px] h-[140px] mt-[100px] ml-[-10px]  justify-center z-50 "/>
        <img src="/assets/Untitled design (3).png" class="w-62 h-52 ml-[200px] mt-[40px] z-50 hover:rotate-[60deg] transition duration-300"/>
    </div>
        <div class="bg-white/10 backdrop-blur-lg w-96 h-64 flex items-center justify-center text-xl font-bold rounded-lg shadow-lg shadow-purple-500">
            <form action="/detail" method="POST" enctype="multipart/form-data" id="upload-form">
                <div id="file-upload-section">
                    <div class="input1">
                        <input type="file" name="image" id="file-input" accept="image/*" required class="hidden">
                        <label for="file-input" class="cursor-pointer">
                            <p class="text-center">Click to select an image</p>
                        </label>
                    </div>
                    <button type="button" class="switch-btn" id="use-camera-btn">Use Camera Instead</button>
                </div>

                <div id="camera-section" style="display: none;">
                    <div class="camera-container">
                        <video id="camera-view" autoplay playsinline class="w-full"></video>
                        <canvas id="photo-canvas" style="display: none;"></canvas>
                        <img id="photo-result" alt="Captured photo" class="w-full">
                    </div>
                    <div class="btn-group">
                        <button type="button" id="capture-btn" class="mt-8 px-6 py-2 bg-white/10 backdrop-blur-lg text-white font-bold rounded-r-full rounded-l-full shadow-lg hover:bg-[#A020F0]">Take Photo</button>
                        <button type="button" id="retake-btn" class="mt-8 px-6 py-2 bg-white/10 backdrop-blur-lg text-white font-bold rounded-r-full rounded-l-full shadow-lg hover:bg-[#A020F0]" style="display: none;">Retake</button>
                        <button type="button" id="upload-btn" class="mt-8 px-6 py-2 bg-white/10 backdrop-blur-lg text-white font-bold rounded-r-full rounded-l-full shadow-lg hover:bg-[#A020F0]" style="display: none;">Use This Photo</button>
                    </div>
                    <button type="button" class="switch-btn" id="use-file-btn">Upload File Instead</button>
                    <input type="hidden" name="camera-image" id="camera-image-data">
                </div>

                <div class="button1">
                    <button type="submit" id="submit-btn" class="mt-8 px-6 py-2 bg-white/10 backdrop-blur-lg text-white font-bold rounded-r-full rounded-l-full shadow-lg hover:bg-[#A020F0]" style="display: none;">Scan Ingredients</button>
                </div>
            </form>
        </div>
        
        <img src="/assets/Untitled design (1).png" class="w-[180px] h-[220px] ml-[-400px] mt-[10px] z-50 hover:rotate-[-60deg] transition duration-300"/>
    </div>
    <img src="/assets/Untitled design (3) (1).png" class="w-[600px] h-[600px] z-50 mt-[80px] top-0 left-0 w-52 h-82 m-2 hidden md:block" />
</div>

<script>
    // DOM Elements
    const fileUploadSection = document.getElementById('file-upload-section');
    const cameraSection = document.getElementById('camera-section');
    const useCameraBtn = document.getElementById('use-camera-btn');
    const useFileBtn = document.getElementById('use-file-btn');
    const cameraView = document.getElementById('camera-view');
    const photoCanvas = document.getElementById('photo-canvas');
    const photoResult = document.getElementById('photo-result');
    const captureBtn = document.getElementById('capture-btn');
    const retakeBtn = document.getElementById('retake-btn');
    const uploadBtn = document.getElementById('upload-btn');
    const submitBtn = document.getElementById('submit-btn');
    const fileInput = document.getElementById('file-input');
    const cameraImageData = document.getElementById('camera-image-data');
    const uploadForm = document.getElementById('upload-form');

    // Camera variables
    let stream = null;

    // Switch between file upload and camera
    useCameraBtn.addEventListener('click', () => {
        fileUploadSection.style.display = 'none';
        cameraSection.style.display = 'block';
        startCamera();
    });

    useFileBtn.addEventListener('click', () => {
        cameraSection.style.display = 'none';
        fileUploadSection.style.display = 'block';
        stopCamera();
    });

    // Camera functions
    async function startCamera() {
        try {
            stream = await navigator.mediaDevices.getUserMedia({ 
                video: { facingMode: 'environment' }, 
                audio: false 
            });
            cameraView.srcObject = stream;
            cameraView.style.display = 'block';
            captureBtn.style.display = 'inline-block';
        } catch (err) {
            console.error("Camera error: ", err);
            alert("Could not access the camera. Please check permissions.");
            useFileBtn.click();
        }
    }

    function stopCamera() {
        if (stream) {
            stream.getTracks().forEach(track => track.stop());
            cameraView.style.display = 'none';
            cameraView.srcObject = null;
            stream = null;
        }
    }

    // Capture photo
    captureBtn.addEventListener('click', () => {
        photoCanvas.width = cameraView.videoWidth;
        photoCanvas.height = cameraView.videoHeight;
        photoCanvas.getContext('2d').drawImage(cameraView, 0, 0);
        
        photoResult.src = photoCanvas.toDataURL('image/jpeg');
        photoResult.style.display = 'block';
        cameraView.style.display = 'none';
        
        captureBtn.style.display = 'none';
        retakeBtn.style.display = 'inline-block';
        uploadBtn.style.display = 'inline-block';
    });

    // Retake photo
    retakeBtn.addEventListener('click', () => {
        photoResult.style.display = 'none';
        cameraView.style.display = 'block';
        
        retakeBtn.style.display = 'none';
        uploadBtn.style.display = 'none';
        captureBtn.style.display = 'inline-block';
    });

    // Use captured photo
    uploadBtn.addEventListener('click', () => {
        cameraImageData.value = photoCanvas.toDataURL('image/jpeg');
        submitBtn.style.display = 'inline-block';
    });

    // Handle file selection
    fileInput.addEventListener('change', () => {
        if (fileInput.files.length > 0) {
            submitBtn.style.display = 'inline-block';
        }
    });

    // Handle form submission
    uploadForm.addEventListener('submit', function(e) {
        if (!fileInput.files[0] && !cameraImageData.value) {
            e.preventDefault();
            alert("Please select an image or take a photo first.");
        }
    });

    // Clean up camera when leaving page
    window.addEventListener('beforeunload', () => {
        stopCamera();
    });
</script>
</body>

<script src='https://cdn.jotfor.ms/s/umd/latest/for-embedded-agent.js'></script>
<script>
  window.addEventListener("DOMContentLoaded", function() {
    window.AgentInitializer.init({
      agentRenderURL: "https://agent.jotform.com/0195f80d7cda7c97ae5851e84e09e969a625",
      rootId: "JotformAgent-0195f80d7cda7c97ae5851e84e09e969a625",
      formID: "0195f80d7cda7c97ae5851e84e09e969a625",
      queryParams: ["skipWelcome=1", "maximizable=1"],
      domain: "https://www.jotform.com",
      isDraggable: false,
      background: "linear-gradient(180deg, #6C73A8 0%, #6C73A8 100%)",
      buttonBackgroundColor: "#0066C3",
      buttonIconColor: "#FFFFFF",
      variant: false,
      customizations: {
        "greeting": "Yes",
        "greetingMessage": "Hi buddy! how can i help you today?",
        "openByDefault": "No",
        "pulse": "Yes",
        "position": "left",
        "autoOpenChatIn": "0"
      },
      isVoice: undefined
    });
  });
</script>
</html>